{"version":3,"sources":["images/solar-system.png","images/sun.png","images/mars.png","images/meteor.png","images/television.png","components/Header/Header.styles.js","components/Header/index.js","components/SolarSummary/SolarSummary.style.js","images/explosion.png","images/clipboard.png","images/nuclear-explosion.png","images/earth.png","components/SolarSummary/index.js","components/SolarBody.js","GlobalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Content","TitleWrapper","Navbar","Header","src","Logo","alt","SunIcon","MarsIcon","MeteorIcon","TVIcon","SolarEvent","SolarSummary","props","console","log","data","messageType","messageIssueTime","messageURL","today","Date","eventTime","easyTime","toLocaleString","weekday","month","day","daysAgo","Math","round","getTime","IPSIcon","href","ReportIcon","CMEIcon","RBEIcon","SolarBody","useState","solarData","setSolarData","useEffect","fetchSolarData","toISOString","endpoint","fetch","then","response","json","map","event","messageID","GlobalStyle","createGlobalStyle","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e0504df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/solar-system.09894116.png\";","export default __webpack_public_path__ + \"static/media/sun.b6776e11.png\";","export default __webpack_public_path__ + \"static/media/mars.00612a4d.png\";","export default __webpack_public_path__ + \"static/media/meteor.0374f023.png\";","export default __webpack_public_path__ + \"static/media/television.b2acf914.png\";","import styled from \"styled-components\";\r\n// vars from GlobalStyle.js\r\nexport const Wrapper = styled.div`\r\n  background-color: var(--red);\r\n  padding: 0 5x;\r\n`;\r\n\r\n// All 'Header' Elements\r\nexport const Content = styled.div`\r\n  padding: 0 0;\r\n  margin: 0 auto;\r\n  color: white;\r\n`;\r\n// Logo + Site Name\r\nexport const TitleWrapper = styled.div`\r\n  font-size: var(--fontSuperBig);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  @media (pointer: fine) {\r\n    justify-content: center;\r\n  }\r\n\r\n  img {\r\n    height: var(--iconHeight);\r\n\r\n    @media (pointer: fine) {\r\n      margin: 5px 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Navbar = styled.div`\r\n  // Overall Navbar\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 6vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    background-color: var(--red);\r\n\r\n    @media (pointer: fine) {\r\n      height: calc(var(--iconHeight) - 10px);\r\n      justify-content: space-around;\r\n    }\r\n  }\r\n  // Each Icon + Title\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    @media (pointer: fine) {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      flex-grow: 0;\r\n      justify-content: space-between;\r\n      width: 7vw;\r\n      height: calc(var(--iconHeight) - 10px);\r\n    }\r\n  }\r\n  // Icon Only\r\n  img {\r\n    width: 7vw;\r\n    @media (pointer: fine) {\r\n      width: calc(var(--iconHeight) - 10px);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport Logo from \"../../images/solar-system.png\";\r\nimport SunIcon from \"../../images/sun.png\";\r\nimport MarsIcon from \"../../images/mars.png\";\r\nimport MeteorIcon from \"../../images/meteor.png\";\r\nimport TVIcon from \"../../images/television.png\";\r\n\r\nimport {\r\n  Content,\r\n  Wrapper,\r\n  Navbar,\r\n  TitleWrapper,\r\n} from \"./Header.styles\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <TitleWrapper>\r\n        <img src={Logo} alt=\"site-logo\" />\r\n        Space Weather\r\n      </TitleWrapper>\r\n      <Navbar>\r\n          <ul>\r\n            <li><img src={SunIcon} alt=\"sun-icon\" />Solar</li>\r\n            <li><img src={MarsIcon} alt=\"mars-icon\" />Mars</li>\r\n            <li><img src={MeteorIcon} alt=\"meteor-icon\" />Asteroids</li>\r\n            <li><img src={TVIcon} alt=\"tv-icon\" />TV</li>\r\n          </ul>\r\n        </Navbar>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\n// All 'Header' Elements\r\nexport const Content = styled.div`\r\n  padding: 0 0;\r\n  margin: 0 auto;\r\n  color: white;\r\n`;\r\n\r\nexport const SolarEvent = styled.div`\r\n  border-style: solid;\r\n  a {\r\n    color: var(--red);\r\n  }\r\n\r\n  img {\r\n    width: var(--iconHeight);\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/explosion.1a11bf14.png\";","export default __webpack_public_path__ + \"static/media/clipboard.45de809b.png\";","export default __webpack_public_path__ + \"static/media/nuclear-explosion.e6618529.png\";","export default __webpack_public_path__ + \"static/media/earth.149bb6a3.png\";","import React from \"react\";\r\n\r\n// Styles\r\nimport { Content, Wrapper, SolarEvent } from \"./SolarSummary.style\";\r\n\r\n// Event Icons\r\nimport IPSIcon from \"../../images/explosion.png\";\r\nimport ReportIcon from \"../../images/clipboard.png\";\r\nimport CMEIcon from \"../../images/nuclear-explosion.png\";\r\nimport RBEIcon from \"../../images/earth.png\";\r\n\r\n// API Event Object\r\n// messageBody, messageID, messageIssueTime, messageType,messageURL\r\n\r\nconst SolarSummary = (props) => {\r\n  console.log(\"event: \", props);\r\n  const { messageType, messageIssueTime, messageURL } = props.data;\r\n  const today = new Date();\r\n  const eventTime = new Date(messageIssueTime);\r\n  const easyTime = eventTime.toLocaleString(\"en-US\", {\r\n    weekday: \"long\",\r\n    month: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n  const daysAgo = Math.round((today.getTime() - eventTime.getTime()) / (1000 * 3600 * 24))\r\n\r\n  switch (messageType) {\r\n    case \"IPS\":\r\n      return (\r\n        <Wrapper>\r\n          <Content>\r\n            <SolarEvent>\r\n              <img src={IPSIcon} alt=\"Interplanetary Shock Icon\" />\r\n              Interplanetary Shock ({messageType})\r\n              <div>\r\n                {`${daysAgo} days ago on `}\r\n                {easyTime}\r\n              </div>\r\n              <div>\r\n                <a href={`${messageURL}`}>Detailed View</a>\r\n              </div>\r\n            </SolarEvent>\r\n          </Content>\r\n        </Wrapper>\r\n      );\r\n      break;\r\n    case \"Report\":\r\n      return (\r\n        <Wrapper>\r\n          <Content>\r\n            <SolarEvent>\r\n              <img src={ReportIcon} alt=\"Report Icon\" />\r\n              NASA {messageType}\r\n              <div>\r\n                {`${daysAgo} days ago on `}\r\n                {easyTime}\r\n              </div>\r\n              <div>\r\n                <a href={`${messageURL}`}>Detailed View</a>\r\n              </div>\r\n            </SolarEvent>\r\n          </Content>\r\n        </Wrapper>\r\n      );\r\n      break;\r\n      case \"CME\":\r\n      return (\r\n        <Wrapper>\r\n          <Content>\r\n            <SolarEvent>\r\n              <img src={CMEIcon} alt=\"Coronal Mass Ejection Icon\" />\r\n              Coronal Mass Ejection ({messageType})\r\n              <div>\r\n                {`${daysAgo} days ago on `}\r\n                {easyTime}\r\n              </div>\r\n              <div>\r\n                <a href={`${messageURL}`}>Detailed View</a>\r\n              </div>\r\n            </SolarEvent>\r\n          </Content>\r\n        </Wrapper>\r\n      );\r\n      break;\r\n      case \"RBE\":\r\n      return (\r\n        <Wrapper>\r\n          <Content>\r\n            <SolarEvent>\r\n              <img src={RBEIcon} alt=\"Radiation Belt Enhancement Icon\" />\r\n              Radiation Belt Enhancement ({messageType})\r\n              <div>\r\n                {`${daysAgo} days ago on `}\r\n                {easyTime}\r\n              </div>\r\n              <div>\r\n                <a href={`${messageURL}`}>Detailed View</a>\r\n              </div>\r\n            </SolarEvent>\r\n          </Content>\r\n        </Wrapper>\r\n      );\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default SolarSummary;\r\n","import React from \"react\";\r\nimport SolarSummary from \"./SolarSummary\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst SolarBody = () => {\r\n  // Store Solar Notifications\r\n  const [solarData, setSolarData] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchSolarData();\r\n  }, []);\r\n\r\n  const fetchSolarData = () => {\r\n    const API_KEY = \"IltOH3vL9ODoatveN6ZaNL7RFPlvjTGyp6Z6kTT9\";\r\n    const today = new Date().toISOString();\r\n    const endpoint = `https://api.nasa.gov/DONKI/notifications?startDate=YYYY-MM-DD&endDate=${today}&type=all&api_key=${API_KEY}`;\r\n\r\n    fetch(endpoint)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(`api array test: `, data);\r\n        return setSolarData(data);\r\n      });\r\n  };\r\n\r\n  if (!solarData) {\r\n    return 'solarData didnt load'\r\n  }\r\n  return (\r\n    <>\r\n      Solar Events\r\n      {solarData.map(event => (\r\n        <SolarSummary key={event.messageID} data={event} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SolarBody;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n :root {\r\n     --iconHeight: 50px;\r\n     --maxWidth: 1280px;\r\n     --white: #ffffff;\r\n     --grey: #43413C;\r\n     --red: #FF3C00;\r\n     --fontSuperBig: 2.5rem;\r\n     --fontBig: 1.7rem;\r\n     --fontMed: 1.2rem;\r\n     --fontSmall: 1rem;\r\n }\r\n\r\n * {\r\n     box-sizing:border-box;\r\n     /* font-family:  */\r\n }\r\n\r\n body {\r\n     margin: 0;\r\n     padding: 0;\r\n     background-color: var(--grey);\r\n     color: var(--white);\r\n     h1 {\r\n     }\r\n    /* h1, h3, p global styles */\r\n }\r\n`;\r\n","import React from 'react';\n// Components\nimport Header from './components/Header/';\nimport SolarBody from './components/SolarBody';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <SolarBody />\n      <h1>h1 GlobalStyle</h1>\n      Space Weather App Here\n      <GlobalStyle />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}